/*
DCSA OpenAPI specification for Electronic Bill of Lading

API specification issued by DCSA.org.  For explanation to specific values or objects please refer to the <a href='https://dcsa.org/wp-content/uploads/2020/12/20201208-DCSA-P1-DCSA-Information-Model-v3.0-FINAL.pdf'>Information Model v3.0</a>  It is possible to use this API as a standalone API. In order to do so it is necessary to use the poll-endPoint - /v1/events  in order to poll event information.  It is recomended to implement the <a href='https://app.swaggerhub.com/apis/dcsaorg/DOCUMENTATION_EVENT_HUB'>DCSA Documentation Event Hub</a> in order to use the push model. Here events are pushed as they occur.

API version: 1.0.0
Contact: info@dcsa.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bol

import (
	"encoding/json"
)

// ShipmentLocations struct for ShipmentLocations
type ShipmentLocations struct {
	ShipmentLocations []ShipmentLocation `json:"shipmentLocations,omitempty"`
}

// NewShipmentLocations instantiates a new ShipmentLocations object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShipmentLocations() *ShipmentLocations {
	this := ShipmentLocations{}
	return &this
}

// NewShipmentLocationsWithDefaults instantiates a new ShipmentLocations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShipmentLocationsWithDefaults() *ShipmentLocations {
	this := ShipmentLocations{}
	return &this
}

// GetShipmentLocations returns the ShipmentLocations field value if set, zero value otherwise.
func (o *ShipmentLocations) GetShipmentLocations() []ShipmentLocation {
	if o == nil || o.ShipmentLocations == nil {
		var ret []ShipmentLocation
		return ret
	}
	return o.ShipmentLocations
}

// GetShipmentLocationsOk returns a tuple with the ShipmentLocations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentLocations) GetShipmentLocationsOk() ([]ShipmentLocation, bool) {
	if o == nil || o.ShipmentLocations == nil {
		return nil, false
	}
	return o.ShipmentLocations, true
}

// HasShipmentLocations returns a boolean if a field has been set.
func (o *ShipmentLocations) HasShipmentLocations() bool {
	if o != nil && o.ShipmentLocations != nil {
		return true
	}

	return false
}

// SetShipmentLocations gets a reference to the given []ShipmentLocation and assigns it to the ShipmentLocations field.
func (o *ShipmentLocations) SetShipmentLocations(v []ShipmentLocation) {
	o.ShipmentLocations = v
}

func (o ShipmentLocations) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ShipmentLocations != nil {
		toSerialize["shipmentLocations"] = o.ShipmentLocations
	}
	return json.Marshal(toSerialize)
}

type NullableShipmentLocations struct {
	value *ShipmentLocations
	isSet bool
}

func (v NullableShipmentLocations) Get() *ShipmentLocations {
	return v.value
}

func (v *NullableShipmentLocations) Set(val *ShipmentLocations) {
	v.value = val
	v.isSet = true
}

func (v NullableShipmentLocations) IsSet() bool {
	return v.isSet
}

func (v *NullableShipmentLocations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShipmentLocations(val *ShipmentLocations) *NullableShipmentLocations {
	return &NullableShipmentLocations{value: val, isSet: true}
}

func (v NullableShipmentLocations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShipmentLocations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
