/*
DCSA OpenAPI specification for Electronic Bill of Lading

API specification issued by DCSA.org.  For explanation to specific values or objects please refer to the <a href='https://dcsa.org/wp-content/uploads/2020/12/20201208-DCSA-P1-DCSA-Information-Model-v3.0-FINAL.pdf'>Information Model v3.0</a>  It is possible to use this API as a standalone API. In order to do so it is necessary to use the poll-endPoint - /v1/events  in order to poll event information.  It is recomended to implement the <a href='https://app.swaggerhub.com/apis/dcsaorg/DOCUMENTATION_EVENT_HUB'>DCSA Documentation Event Hub</a> in order to use the push model. Here events are pushed as they occur.

API version: 1.0.0
Contact: info@dcsa.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bol

import (
	"encoding/json"
)

// CargoLineItems struct for CargoLineItems
type CargoLineItems struct {
	CargoLineItems []CargoLineItem `json:"cargoLineItems,omitempty"`
}

// NewCargoLineItems instantiates a new CargoLineItems object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCargoLineItems() *CargoLineItems {
	this := CargoLineItems{}
	return &this
}

// NewCargoLineItemsWithDefaults instantiates a new CargoLineItems object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCargoLineItemsWithDefaults() *CargoLineItems {
	this := CargoLineItems{}
	return &this
}

// GetCargoLineItems returns the CargoLineItems field value if set, zero value otherwise.
func (o *CargoLineItems) GetCargoLineItems() []CargoLineItem {
	if o == nil || o.CargoLineItems == nil {
		var ret []CargoLineItem
		return ret
	}
	return o.CargoLineItems
}

// GetCargoLineItemsOk returns a tuple with the CargoLineItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CargoLineItems) GetCargoLineItemsOk() ([]CargoLineItem, bool) {
	if o == nil || o.CargoLineItems == nil {
		return nil, false
	}
	return o.CargoLineItems, true
}

// HasCargoLineItems returns a boolean if a field has been set.
func (o *CargoLineItems) HasCargoLineItems() bool {
	if o != nil && o.CargoLineItems != nil {
		return true
	}

	return false
}

// SetCargoLineItems gets a reference to the given []CargoLineItem and assigns it to the CargoLineItems field.
func (o *CargoLineItems) SetCargoLineItems(v []CargoLineItem) {
	o.CargoLineItems = v
}

func (o CargoLineItems) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CargoLineItems != nil {
		toSerialize["cargoLineItems"] = o.CargoLineItems
	}
	return json.Marshal(toSerialize)
}

type NullableCargoLineItems struct {
	value *CargoLineItems
	isSet bool
}

func (v NullableCargoLineItems) Get() *CargoLineItems {
	return v.value
}

func (v *NullableCargoLineItems) Set(val *CargoLineItems) {
	v.value = val
	v.isSet = true
}

func (v NullableCargoLineItems) IsSet() bool {
	return v.isSet
}

func (v *NullableCargoLineItems) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCargoLineItems(val *CargoLineItems) *NullableCargoLineItems {
	return &NullableCargoLineItems{value: val, isSet: true}
}

func (v NullableCargoLineItems) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCargoLineItems) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
